name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: 14
        registry-url: https://registry.npmjs.org/

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Publish to NPM
      run: yarn publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build:
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-18.04, macos-10.15, windows-2019]

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      npm_config_build_from_source: true

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Package artifacts
      run: yarn node-pre-gyp package

    - name: Upload to Release
      uses: csexton/release-asset-action@v2
      with:
        pattern: build/stage/**/argon2*.tar.gz
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ github.event.release.upload_url }}

  build-alpine:
    name: Build on Alpine Linux
    runs-on: ubuntu-latest
    container:
      image: node:14-alpine
      env:
        npm_config_build_from_source: true

    steps:
      - name: Install build deps
        run: apk add make g++ python3 git

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Package artifacts
        run: yarn node-pre-gyp package

      - name: Upload to Release
        uses: csexton/release-asset-action@v2
        with:
          pattern: build/stage/**/argon2*.tar.gz
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ github.event.release.upload_url }}

  build-arm:
    name: Build on arm64
    runs-on: ubuntu-latest
    env:
      npm_config_build_from_source: true
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: aarch64
            distro: alpine_latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true

    - uses: uraimo/run-on-arch-action@v2.0.10
      name: Package artifacts
      id: build
      with:
        arch: ${{ matrix.arch }}
        distro: ${{ matrix.distro }}
        setup: mkdir -p "${PWD}/artifacts"
        dockerRunArgs: --volume "${PWD}:/repo"
        env: |
          npm_config_build_from_source: true
        install: |
          case "${{ matrix.distro }}" in
            ubuntu*|jessie|stretch|buster)
              apt-get update -y
              apt-get install -y curl
              curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
              apt-get install -y make g++ python nodejs
              npm install --global yarn
              ;;
            alpine*)
              apk add --update make g++ python3
              apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/v3.13/main/ nodejs~=14 npm~=14
              npm install --global yarn
              ;;
          esac
        run: |
          cd /repo
          yarn install --frozen-lockfile
          yarn node-pre-gyp package

    - name: Upload to Release
      uses: csexton/release-asset-action@v2
      with:
        pattern: build/stage/**/argon2*.tar.gz
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ github.event.release.upload_url }}
