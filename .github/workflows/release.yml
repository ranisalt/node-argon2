name: Release

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, macos-m1, windows-2019]
x
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 20

      - run: corepack enable yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Prebuild
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: prebuilds/**/*.node

  build-alpine:
    name: Build on Alpine Linux
    runs-on: ubuntu-latest
    container:
      image: node:20-alpine

    steps:
      - name: Install build deps
        run: apk add make g++ python3 git

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Prebuild
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: prebuilds/**/*.node

  build-arm:
    name: Build on arm64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04
          - arch: aarch64
            distro: alpine_latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Prebuild
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          setup: mkdir -p "${PWD}/artifacts"
          dockerRunArgs: --volume "${PWD}:/repo"
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster)
                apt update -yq
                apt install -yq curl make g++ python
                curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
                apt install -yq nodejs
                npm install --global yarn
                ;;
              alpine*)
                apk add --update make g++ python3
                apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/v3.17/main/ nodejs~=20 npm~=20
                npm install --global yarn
                ;;
            esac
          run: |
            cd /repo
            yarn install --frozen-lockfile
            yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: prebuilds/**/*.node

  build-freebsd:
    name: Build on FreeBSD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Package artifacts
        uses: vmactions/freebsd-vm@v1
        with:
          envs: "npm_config_build_from_source"
          prepare: |
            pkg install -y gmake python3 yarn-node20
          run: |
            yarn install --frozen-lockfile
            yarn build
          sync: sshfs

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: prebuilds/**/*.node

  publish:
    name: Publish package
    runs-on: ubuntu-20.04
    needs: [build, build-alpine, build-arm, build-freebsd]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Publish to NPM
        run: yarn publish
        if: ${{ !env.ACT }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
